// 2019.10.26.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <malloc.h>

//int deal_data( int* data,int* output,int n );
void bubble_order( double data[][1500],int total,int n );
void permutation( int k,int n,const int data1[],int input[],double output[][1500] );

int the_number=0;

int main(void)
{
	int i,j,temp,n,a1=0,step=0,total=1;
	int *data1,*data2,*input,*number/*,(*data3)[5],(*data4)[5]*/;
	scanf("%d",&n);
	for( i=1;i<n+1;i++ )
	{
		total *= i;
	}
	data1=( int* )malloc( sizeof( int )* n );//创建数组
	data2=( int* )malloc( sizeof( int )* n );
	input=( int* )malloc( sizeof( int )* n );
	//number=( int* )malloc( sizeof( int )* n );
	double (*data3)[1500]=( double (*)[1500] )malloc( sizeof( double )* 1500 * total );
	//data4=( int (*)[5] )malloc( sizeof( int )* 5 * n );
	for( i=0;i<n;i++ )//得到数据
	{
		scanf("%d",( data1+i ));
	}
	for( i=0;i<n;i++ )
	{
		scanf("%d",( data2+i ));
	}
	for( i=0;i<n;i++ )
	{
		input[i]=data2[i];
	}
	permutation( 0,n,data1,input,data3 );
	bubble_order( data3,total,n );
	for( i=0;i<n;i++ )
	{
		if( (double)(data2[i]) != data3[0][i] )
		{
			for( j=0;j<n;j++ )
			{
				if( data2[j]== data3[0][i] )
				{
					temp=data2[i];
					data2[i]=data2[j];
					data2[j]=temp;
					step++;
					break;
				}
			}
		}
	}
	printf( "%d\n",step%99999997 );//结果过大取余
	system( "pause" );
	return 0;
}

void permutation( int k,int n,const int data1[],int input[],double output[][1500] )
{
	int i,j,temp;
	double total=0;
	if( k==n-1 )
	{
		output[the_number][n]=0;
		for( i=0;i<n;i++ )
		{
			total=pow((double)(data1[i]-input[i]),2);
			output[the_number][n] += total ;
			output[the_number][i]=input[i];
		}
		the_number++;
	}
	else
	{
		for( i=k;i<n;i++ )//交换数字并递归
		{
			temp=input[k];
			input[k]=input[i];
			input[i]=temp;
			permutation( k+1,n,data1,input,output );
		}
	}
}

void bubble_order( double data[][1500],int total,int n )//冒泡排序
{
	int i,j,k;
	double temp[1500];
	for( i=0;i<total-1;i++)
	{
		for( j=0;j<total-i-1;j++ )
		{
			if( data[j][n] > data[j+1][n] )
			{
				for( k=0;k<n+1;k++ )//交换所有数值
				{
					temp[k]=data[j][k];
					data[j][k]=data[j+1][k];
					data[j+1][k]=temp[k];
				}
			}
		}
	}
}


